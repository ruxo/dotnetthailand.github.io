{"componentChunkName":"component---src-templates-docs-js","path":"/projects/kubernetes/kubernetes-dotnet-core-web-api-template","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"1d23ee27-6e3c-52e9-ab38-3ac238953daf","title":"Template for Deploying a .NET Core Web API microservice on Kubernetes and ACI","slug":"/projects/kubernetes/kubernetes-dotnet-core-web-api-template"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Template for Deploying a .NET Core Web API microservice on Kubernetes and ACI\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"categories\": [\"project\"],\n  \"tags\": [\"dotnet6\", \"dotnet\", \"kubernetes\", \"ACI\", \"API\", \"micro-service\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Original Author: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/dmakeroam\"\n  }, \"Sirinat Paphatsirinatthi\"), \"\\nSource Code: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/kubeopsskills/dotnet-core-web-api\"\n  }, \"https://github.com/kubeopsskills/dotnet-core-web-api\")), mdx(\"p\", null, \"The aim of this project is to simplify Kubernetes configuration.\"), mdx(\"p\", null, \"This is a boilerplate template for building / deploying a .NET Core Web API microservice on Kubernetes / Azure Container Instance\"), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \".NET Core Web API Starter Project\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://cloud.okteto.com/deploy?repository=https://github.com/kubeopsskills/dotnet-core-web-api&branch=develop\"\n  }, mdx(\"img\", {\n    parentName: \"a\",\n    \"src\": \"https://okteto.com/develop-okteto.svg\",\n    \"alt\": \"Develop on Okteto\"\n  }))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This is a boilerplate template for building / deploying a .NET Core Web API microservice on Kubernetes / Azure Container Instance.\\nThis leverages .NET 6, new hosting model, and new routing API to enhance .NET performance. You can learn .NET 6 more on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.dotnetthailand.com/web-frameworks/asp-net-core/asp-net-core-minimal-apis\"\n  }, \"ASP.NET Core minimal APIs\"), \".\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Versioning\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GitHub Release\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \".NET Core Version\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Diagnostics HealthChecks Version\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"main\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"6.0.100-preview.6.21355.2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2.2.0\"))))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Project Structure\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\u251C\\u2500\\u2500 Controllers\\n\\u2502   \\u2514\\u2500\\u2500 KubeOpsController.cs\\n\\u251C\\u2500\\u2500 Dockerfile\\n\\u251C\\u2500\\u2500 KubernetesLocalProcessConfig.yaml\\n\\u251C\\u2500\\u2500 LICENSE\\n\\u251C\\u2500\\u2500 Models\\n\\u2502   \\u2514\\u2500\\u2500 DatabaseConfig.cs\\n\\u251C\\u2500\\u2500 Program.cs\\n\\u251C\\u2500\\u2500 Properties\\n\\u2502   \\u2514\\u2500\\u2500 launchSettings.json\\n\\u251C\\u2500\\u2500 README.md\\n\\u251C\\u2500\\u2500 Services\\n\\u2502   \\u2514\\u2500\\u2500 APIService.cs\\n\\u251C\\u2500\\u2500 Startup.cs\\n\\u251C\\u2500\\u2500 appsettings.Development.json\\n\\u251C\\u2500\\u2500 bin\\n\\u2502   \\u2514\\u2500\\u2500 Debug\\n\\u251C\\u2500\\u2500 configs\\n\\u2502   \\u2514\\u2500\\u2500 prod\\n\\u251C\\u2500\\u2500 dotnet-core-web-api.csproj\\n\\u251C\\u2500\\u2500 dotnet-core-web-api.sln\\n\\u251C\\u2500\\u2500 manifests\\n\\u2502   \\u251C\\u2500\\u2500 deployment.yaml\\n\\u2502   \\u2514\\u2500\\u2500 service.yaml\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Dockerfile\"), \" is .NET Core Web API Multistage Dockerfile (following Docker Best Practices)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"KubernetesLocalProcessConfig.yaml\"), \" is \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://devblogs.microsoft.com/visualstudio/bridge-to-kubernetes-ga/\"\n  }, \"Bridge to Kubernetes\"), \" config to supports developing .NET Core Web API microservice on Kubernetes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"configs\"), \" folder will contain .NET Core Web API centralized config structure\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"appsettings.Development.json\"), \" is .NET Core Web API development environment config\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"manifests\"), \" folder will contain Kubernetes manifests (deployment, service)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Startup.cs\"), \" is .NET Core Web API startup & path routing config\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Program.cs\"), \" is .NET Core Web API environment variable mapping config\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Setting Up\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To setup this project, you need to clone the git repo\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"$ git clone https://github.com/kubeopsskills/dotnet-core-web-api.git\\n$ cd dotnet-core-web-api\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"followed by\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"$ dotnet restore\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Deploying a .NET Core Web API microservice on Kubernetes\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Prerequisite:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \".NET Core Web API Docker Image\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Preparing Config Map for .NET Core Web API microservice\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"$ kubectl apply -k configs/prod\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To deploy the microservice on Kubernetes, run following command:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"$ kubectl apply -f manifests\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"This will deploy it on Kubernetes with the centralized config.\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Deploying a .NET Core Web API microservice on Azure Container Instance (ACI)\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Prerequisite:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.docker.com/cloud/aci-integration/#run-docker-containers-on-aci\"\n  }, \"ACI Context\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To deploy the microservice on ACI, run following command:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"$ docker compose -f aci-docker-compose.yaml up -d\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Deploying a .NET Core Web API microservice on \", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://aws.amazon.com/apprunner/\"\n  }, \"AWS App Runner\"), \" using AWS Copilot\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Prerequisite:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://aws.github.io/copilot-cli/docs/getting-started/install/\"\n  }, \"AWS Copilot\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"To deploy the microservice on AWS, following these steps:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prepare AWS IAM roles and AWS ECR repository for the microservice\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"$ copilot init --app kubeops-demo\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create the test environment on AWS\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"$ copilot env init --name test --app kubeops-demo\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deploy the microservice on the test environment\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"$ copilot svc deploy --env test\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Learning Resources:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.dotnetthailand.com/\"\n  }, \".NET Thailand\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-6-preview-4/\"\n  }, \"Announcing .NET 6 Preview 4\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.microsoft.com/en-us/dotnet/core/compatibility/6.0\"\n  }, \"Breaking changes in .NET 6\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#net-core-web-api-starter-project","title":".NET Core Web API Starter Project","items":[{"url":"#versioning","title":"Versioning"},{"url":"#project-structure","title":"Project Structure"},{"url":"#setting-up","title":"Setting Up"},{"url":"#deploying-a-net-core-web-api-microservice-on-kubernetes","title":"Deploying a .NET Core Web API microservice on Kubernetes","items":[{"url":"#prerequisite","title":"Prerequisite:"}]},{"url":"#deploying-a-net-core-web-api-microservice-on-azure-container-instance-aci","title":"Deploying a .NET Core Web API microservice on Azure Container Instance (ACI)","items":[{"url":"#prerequisite-1","title":"Prerequisite:"}]},{"url":"#deploying-a-net-core-web-api-microservice-on-aws-app-runner-using-aws-copilot","title":"Deploying a .NET Core Web API microservice on AWS App Runner using AWS Copilot","items":[{"url":"#prerequisite-2","title":"Prerequisite:"}]},{"url":"#learning-resources","title":"Learning Resources:"}]}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"projects/kubernetes/kubernetes-dotnet-core-web-api-template.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"d8cc45e74ec87b664a5c7f2ad7a707af6edac455","date":"2021-09-20 03:20"}},"pageContext":{"id":"1d23ee27-6e3c-52e9-ab38-3ac238953daf"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}