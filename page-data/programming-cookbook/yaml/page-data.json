{"componentChunkName":"component---src-templates-docs-js","path":"/programming-cookbook/yaml","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"044099fe-96f3-5809-85b0-2a27ab684391","title":"YAML","slug":"/programming-cookbook/yaml"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"YAML\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"How do I break a string in YAML over multiple lines?\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use > most of the time: interior line breaks are stripped out, although you get one at the end:\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"key: >\\n  This is my very very very\\n  long string.\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Become \\u2192\"), \" This is my very very very long string.\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use | if you want those line breaks to be preserved as \\\\n (for instance, embedded markdown with paragraphs).\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"key: |\\n  This is my very very very\\n  long string.\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Become \\u2192\"), \" This is my very very very\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\\n\"), \"long string.\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Other options with summary table\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\n                      >     |            \\\"     '     >-     >+     |-     |+\\n-------------------------|------|-----|-----|-----|------|------|------|------\\nTrailing spaces   | Kept | Kept |     |     |     | Kept | Kept | Kept | Kept\\nSingle newline => | _    | \\\\n   | _   | _   | _   | _    |  _   | \\\\n   | \\\\n\\nDouble newline => | \\\\n   | \\\\n\\\\n | \\\\n  | \\\\n  | \\\\n  | \\\\n   |  \\\\n  | \\\\n\\\\n | \\\\n\\\\n\\nFinal newline  => | \\\\n   | \\\\n   |     |     |     |      |  \\\\n  |      | \\\\n\\nFinal dbl nl's => |      |      |     |     |     |      | Kept |      | Kept\\nIn-line newlines  | No   | No   | No  | \\\\n  | No  | No   | No   | No   | No\\nSpaceless newlines| No   | No   | No  | \\\\   | No  | No   | No   | No   | No\\nSingle quote      | '    | '    | '   | '   | ''  | '    | '    | '    | '\\nDouble quote      | \\\"    | \\\"    | \\\"   | \\\\\\\"  | \\\"   | \\\"    | \\\"    | \\\"    | \\\"\\nBackslash         | \\\\    | \\\\    | \\\\   | \\\\\\\\  | \\\\   | \\\\    | \\\\    | \\\\    | \\\\\\n\\\" #\\\", \\\": \\\"        | Ok   | Ok   | No  | Ok  | Ok  | Ok   | Ok   | Ok   | Ok\\nCan start on same | No   | No   | Yes | Yes | Yes | No   | No   | No   | No\\nline as key\\n\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More details & Credit \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/a/21699210/1872200\"\n  }, \"https://stackoverflow.com/a/21699210/1872200\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#how-do-i-break-a-string-in-yaml-over-multiple-lines","title":"How do I break a string in YAML over multiple lines?"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"programming-cookbook/yaml.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"d8cc45e74ec87b664a5c7f2ad7a707af6edac455","date":"2021-09-20 03:20"}},"pageContext":{"id":"044099fe-96f3-5809-85b0-2a27ab684391"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}