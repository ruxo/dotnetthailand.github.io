{"componentChunkName":"component---src-templates-docs-js","path":"/programming-cookbook/github-actions/deploy-oauth2-proxy-to-app-service-container","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"17841830-c87f-58da-b2e2-a241783751f6","title":"Deploy Oauth2 Proxy to App Service container","slug":"/programming-cookbook/github-actions/deploy-oauth2-proxy-to-app-service-container"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Deploy Oauth2 Proxy to App Service container\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Create App Service container\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create Azure App Service with a container.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use DockerHub registry and enter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mcr.microsoft.com/dotnet/samples:aspnetapp\"), \" as image.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Wait until the app has been created\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Open a browser and navigate to https://{your-app-service-name}.azurewebsites.net/.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You need to wait for a while until the website is ready. Then you will find an example ASP.NET Core MVC app.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"In App Service panel, you can go to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Deployment Center\"), \" and click \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Logs\"), \" to check all logs while launching a container.\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Set some App Service configurations\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set these configurations to your app service:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"WEBSITE_WEBDEPLOY_USE_SCM\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"true\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"WEBSITES_PORT\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"8000\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OAUTH2_CLIENT_ID\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You Google Oauth2 client ID\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OAUTH2_CLIENT_SECRET\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You Google Oauth2 client ID\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OAUTH2_REDIRECT_URL\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You public website redirect URL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is usually in this pattern: https://{your-app-service-name}.azurewebsites.net/oauth2/callback\"))))))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Create Azure Container Register (ACR) and get a username and password\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new Azure Container Registry with basic type.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wait until your container registry has been created.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In container registry panel, go to Access keys and enable admin user.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You will find username and password that we will for GitHub secret values.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Create GitHub secret\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Download a publish profile from your App Service on overview page and use it a value of AZURE_WEBAPP_CONTAINER_PUBLISH_PROFILE secret.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create these GitHub secrets with their values:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AZURE_WEBAPP_CONTAINER_PUBLISH_PROFILE\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AZURE_WEBAPP_NAME\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is your app service name only without https:// and azurewebsites.net.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"LOGIN_SERVER\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Full name of your Azure Container Register without schema e.g. {your-acr}-azurecr.io\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"REGISTRY_USERNAME\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Your Azure Container Register username\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"REGISTRY_PASSWORD\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Your Azure Container Register password\"))))))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Create Google credential\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/oauth_provider#google-auth-provider\"\n  }, \"https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/oauth_provider#google-auth-provider\")))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Example of Dockerfile\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"FROM node:12-alpine\\nEXPOSE 8000\\nWORKDIR /app\\n\\nRUN npm install -g serve\\n\\n# Oauth2 Proxy executable binary file\\nCOPY oauth2-proxy ./\\nRUN chmod +x oauth2-proxy\\n\\nCOPY ./entrypoint.sh ./\\nRUN chmod +x entrypoint.sh\\n\\nCOPY ./oauth_config.cfg ./\\nCOPY ./index.html ./\\nCOPY ./authenticated-emails-list.txt ./\\n\\nENTRYPOINT [\\\"./entrypoint.sh\\\"]\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"index.html can be other HTML source files for a website that you want to protect by Google authentication\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Example of Oauth2 Proxy configuration\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"http_address = \\\"0.0.0.0:8000\\\"\\nupstreams = [\\n  \\\"http://127.0.0.1:3000/\\\"\\n]\\n\\ncookie_name = \\\"_oauth2_proxy\\\"\\n# Generate with Python command\\n# python -c 'import os,base64; print(base64.urlsafe_b64encode(os.urandom(16)).decode())'\\ncookie_secret = \\\"OkbN-4LP4kf8kQoupLmkHA==\\\"\\n\\n# https://github.com/oauth2-proxy/oauth2-proxy/issues/73#issuecomment-466667048\\nauthenticated_emails_file = \\\"./authenticated-emails-list.txt\\\"\\n\\n# https://github.com/bitly/oauth2_proxy/issues/492\\ncookie_secure = false\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Example of entrypoint.sh\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"#!/bin/sh\\n\\n# Run two services\\n./oauth2-proxy --client-id $OAUTH2_CLIENT_ID --client-secret $OAUTH2_CLIENT_SECRET --redirect-url $OAUTH2_REDIRECT_URL --config \\\"./oauth_config.cfg\\\" &\\nserve --listen 3000 --no-clipboard .\\n\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Example of authenticated-emails-list.txt\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"authenticated-emails-list.txt\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"user1@gmail.com\\nuser2@gmail.com\\nuser3@gmail.com\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Example of GitHubActions\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yml\"\n  }, \"name: Deploy protected content with Oauth2 Proxy\\non:\\n  push:\\n    branches:\\n      - main\\n\\nenv:\\n  NODE_VERSION: 12.x # Set the Node.js version to use.\\n  DOCKER_IMAGE: ${{ secrets.LOGIN_SERVER }}/oauth2-proxy:${{ github.sha }}\\n\\njobs:\\n  deploy:\\n    name: Deploy protected content\\n    # Find more virtual environment. https://github.com/actions/virtual-environments\\n    runs-on: ubuntu-18.04\\n    steps:\\n      - name: Checkout the latest source code from the current branch\\n        uses: actions/checkout@v2\\n\\n      - uses: azure/docker-login@v1\\n        with:\\n          login-server: ${{ secrets.LOGIN_SERVER }}\\n          username: ${{ secrets.REGISTRY_USERNAME }}\\n          password: ${{ secrets.REGISTRY_PASSWORD }}\\n\\n      - name: Push a new image to container registry\\n        run: |\\n          docker build . --tag ${{ env.DOCKER_IMAGE }}\\n          docker push ${{ env.DOCKER_IMAGE }}\\n\\n        # Before downloading a publish profile, make sure that you have set WEBSITE_WEBDEPLOY_USE_SCM\\n        # in App Service Configuration to true\\n        # configure port number\\n        # https://docs.microsoft.com/en-us/azure/app-service/configure-custom-container?pivots=container-linux#configure-port-number\\n        # WEBSITES_PORT\\n      - uses: azure/webapps-deploy@v2\\n        with:\\n          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}\\n          publish-profile: ${{ secrets.AZURE_WEBAPP_CONTAINER_PUBLISH_PROFILE }}\\n          images: ${{ env.DOCKER_IMAGE }}\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Trigger GitHub Actions\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to GitHub Action tab and enable it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create new commit and push the project to the main branch\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to GitHub and check Actions tab and wait until all workflow jobs/steps are successful.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Update App Service to use an image from Azure Container Registry\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go to App Service panel in Azure portal.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Deployment Center\"), \" and click \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Settings\"), \" tab.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Change Registry source to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Azure Container Registry\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Select your image and tag that built from GitHub Actions.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open a browser and navigate to your website https://{your-website-name}.azurewebsites.net/\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You should find Oauth2 Proxy protection on your home page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Log in with your allowed email in authenticated-emails-list.txt.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After you have logged in with Google, you will be redirected to a home page and see a protected content.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Credit\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sirinat Oam Paphatsirinatthi - KubeOps Skills\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#create-app-service-container","title":"Create App Service container"},{"url":"#set-some-app-service-configurations","title":"Set some App Service configurations"},{"url":"#create-azure-container-register-acr-and-get-a-username-and-password","title":"Create Azure Container Register (ACR) and get a username and password"},{"url":"#create-github-secret","title":"Create GitHub secret"},{"url":"#create-google-credential","title":"Create Google credential"},{"url":"#example-of-dockerfile","title":"Example of Dockerfile"},{"url":"#example-of-oauth2-proxy-configuration","title":"Example of Oauth2 Proxy configuration"},{"url":"#example-of-entrypointsh","title":"Example of entrypoint.sh"},{"url":"#example-of-authenticated-emails-listtxt","title":"Example of authenticated-emails-list.txt"},{"url":"#example-of-githubactions","title":"Example of GitHubActions"},{"url":"#trigger-github-actions","title":"Trigger GitHub Actions"},{"url":"#update-app-service-to-use-an-image-from-azure-container-registry","title":"Update App Service to use an image from Azure Container Registry"},{"url":"#credit","title":"Credit"}]},"timeToRead":2,"parent":{"__typename":"File","relativePath":"programming-cookbook/github-actions/deploy-oauth2-proxy-to-app-service-container.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"d8cc45e74ec87b664a5c7f2ad7a707af6edac455","date":"2021-09-20 03:20"}},"pageContext":{"id":"17841830-c87f-58da-b2e2-a241783751f6"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}