{"componentChunkName":"component---src-templates-docs-js","path":"/programming-cookbook/github-actions/deploy-dotnet-app-to-azure-app-service","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"a2050e13-4af0-5754-a422-b69fab8fc6c4","title":"Deploy .NET app to Azure App Service","slug":"/programming-cookbook/github-actions/deploy-dotnet-app-to-azure-app-service"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Deploy .NET app to Azure App Service\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Deploy .NET app to Azure App Service code\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pushing code to a main branch triggers a workflow.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If a project has Yarn Workspaces, build all Node.js packages.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dotnet publish\"), \" to build and publish a project to Azure App Service.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Original Code is from \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/codesanook/codesanook-ef-note/blob/main/.github/workflows/deploy-to-app-service-code.yml\"\n  }, \"https://github.com/codesanook/codesanook-ef-note/blob/main/.github/workflows/deploy-to-app-service-code.yml\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"# .github/workflows/deploy-to-app-service-code.yml\\nname: Deploy ASP.NET Core MVC app to Azure App Service Code\\n\\non:\\n  push:\\n    branches:\\n      - main\\n\\nenv:\\n  WEB_PROJECT_DIR: ${{ github.workspace }}/app # Set to the root path of your web project, defaults to the repository root\\n  OUTPUT_DIR: publish # Relative to a current working directory\\n  DOTNET_VERSION: 5.0.x # Set .NET version to use\\n  NODE_VERSION: 10.x # Set Node.js version to use\\n\\njobs:\\n  build:\\n    # Find more virtual environments\\n    # https://www.dotnetthailand.com/programming-cookbook/github-actions/github-actions-fundamentals#findmorevirtualenvironments\\n    runs-on: ubuntu-latest\\n\\n    # You can use default run to set default working directory\\n    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_iddefaultsrun\\n    defaults:\\n      run:\\n        working-directory: ${{ env.WEB_PROJECT_DIR }}\\n\\n    steps:\\n      - name: Checkout the latest source code from ${{ github.ref }} commit\\n        uses: actions/checkout@v2\\n\\n      - name: Set YARN_WORKSPACES_EXIST variable\\n        run: |\\n          workspaces_info_result=$(yarn workspaces info > /dev/null 2>&1; echo $?; exit 0)\\n          if [ $workspaces_info_result -eq 0 ]; then echo \\\"YARN_WORKSPACES_EXIST=1\\\" >> $GITHUB_ENV; fi\\n\\n      # https://github.com/actions/setup-node\\n      - name: Use Node.js version ${{ env.NODE_VERSION }}\\n        if: ${{ env.YARN_WORKSPACES_EXIST == 1 }}\\n        uses: actions/setup-node@v2\\n        with:\\n          node-version: ${{ env.NODE_VERSION }}\\n\\n      - name: Build all Node.js projects if Yarn Workspaces exists\\n        if: ${{ env.YARN_WORKSPACES_EXIST == 1 }}\\n        run: |\\n          yarn install\\n          yarn workspaces run build\\n\\n      # https://github.com/actions/setup-dotnet\\n      - name: Setup .NET SDK version ${{ env.DOTNET_VERSION }}\\n        uses: actions/setup-dotnet@v1\\n        with:\\n          dotnet-version: ${{ env.DOTNET_VERSION }}\\n\\n      - name: Restore Nuget packages\\n        run: |\\n          pwd\\n          ls\\n          dotnet restore\\n\\n      - name: Publish a .NET project to ${{ env.OUTPUT_DIR }}\\n        run: dotnet publish --configuration Release --output ${{ env.OUTPUT_DIR }} --no-restore\\n\\n      # Before downloading a publish profile,\\n      # please make sure you have set WEBSITE_WEBDEPLOY_USE_SCM in App Service configuration to true.\\n      - name: Deploy to Azure App Service code publish\\n        uses: azure/webapps-deploy@v2\\n        with:\\n          app-name: ${{ secrets.AZURE_WEBAPP_CODE_PUBLISH_NAME }}\\n          publish-profile: ${{ secrets.AZURE_WEBAPP_CODE_PUBLISH_PROFILE }}\\n          package: ${{env.WEB_PROJECT_DIR}}/${{ env.OUTPUT_DIR }}\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Deploy .NET app to Azure App Service container\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When pushing code to a main branch triggers a workflow.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Build a .NET App custom image and push to DockerHub.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deploy an image to Azure App Service container.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code from \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/codesanook/codesanook-ef-note/blob/main/.github/workflows/deploy-to-app-service-container.yml\"\n  }, \"https://github.com/codesanook/codesanook-ef-note/blob/main/.github/workflows/deploy-to-app-service-container.yml\"))), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: Deploy ASP.NET Core MVC app to Azure App Service Linux Container\\n\\non:\\n  push:\\n    branches:\\n      - main\\nenv:\\n  # your-name/ef-note:0fd5f6b9a71eb9dcf5f30c70f6e1b9b77dfadfb5\\n  DOCKER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}\\n\\njobs:\\n  build:\\n    # https://www.dotnetthailand.com/programming-cookbook/github-actions/github-actions-fundamentals#findmorevirtualenvironments\\n    runs-on: ubuntu-latest\\n\\n    steps:\\n      - name: Checkout the latest source code from {{ github.ref }}\\n        uses: actions/checkout@v2\\n\\n      # https://github.com/docker/login-action/releases\\n      - name: Login to Docker Hub\\n        uses: docker/login-action@v1\\n        with:\\n          username: ${{ secrets.DOCKERHUB_USERNAME }}\\n          password: ${{ secrets.DOCKERHUB_TOKEN }}\\n\\n      # https://docs.docker.com/docker-hub/\\n      - name: Build and push a custom image\\n        run: |\\n          docker build --tag ${{ env.DOCKER_IMAGE_NAME }} --target release .\\n          docker push ${{ env.DOCKER_IMAGE_NAME }}\\n\\n      # Before downloading a publish profile,\\n      # please make sure you have set WEBSITE_WEBDEPLOY_USE_SCM in App Service configuration to true.\\n      - uses: azure/webapps-deploy@v2\\n        with:\\n          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}\\n          publish-profile: ${{ secrets.AZURE_WEBAPP_CONTAINER_PUBLISH_PROFILE }}\\n          images: ${{ env.DOCKER_IMAGE_NAME }}\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#deploy-net-app-to-azure-app-service-code","title":"Deploy .NET app to Azure App Service code"},{"url":"#deploy-net-app-to-azure-app-service-container","title":"Deploy .NET app to Azure App Service container"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"programming-cookbook/github-actions/deploy-dotnet-app-to-azure-app-service.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"d8cc45e74ec87b664a5c7f2ad7a707af6edac455","date":"2021-09-20 03:20"}},"pageContext":{"id":"a2050e13-4af0-5754-a422-b69fab8fc6c4"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}