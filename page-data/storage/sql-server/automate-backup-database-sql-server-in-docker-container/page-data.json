{"componentChunkName":"component---src-templates-docs-js","path":"/storage/sql-server/automate-backup-database-sql-server-in-docker-container","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"0078858f-571d-5f43-a48d-e0ad80e9d327","title":"Automate Backup database SQL Server in docker container","slug":"/storage/sql-server/automate-backup-database-sql-server-in-docker-container"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Automate Backup database SQL Server in docker container\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hi, everyone. This is first my post in dev.to and my first time for write article in second language. today I want to share some trick for backup your database from docker container. let's begin...\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" I assume your already running container. \"), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"1. Write T-SQL for backup your database.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For example I use TutorialDB database for demonstrate purpose. Your can create same database click \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.microsoft.com/en-us/sql/azure-data-studio/quickstart-sql-server?view=sql-server-ver15#create-a-database\"\n  }, \"Create a database\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"PRINT \\\"Start Backup process...\\\";\\nDECLARE @MyFileName varchar(200)\\nSELECT @MyFileName=N'/tmp/Backup_' + convert(nvarchar(20),GetDate(),112)+'_'+convert(nvarchar(20),GetDate(),108)+ '.bak'\\nBACKUP DATABASE [TutorialDB] TO DISK=@MyFileName\\nPRINT \\\"Finished backup process...\\\";\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Then save above T-SQL to backup-database.sql\")), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"2. Copy backup-database.sql file to your container.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For example I just copy it to tmp directory. You can copy it to any your directory.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"docker cp ./backup-database.sql example-database:/tmp\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Then go inside container by cli as below.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"docker exec -it example-database /bin/bash\\n$ ls -lh /tmp\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Then see in tmp directory as below.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tw5e3z8anxenfrs62tzw.png\",\n    \"alt\": null\n  }))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"3. Update packages list to new version.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Go inside your container by docker exec cli as below. \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-docker\"\n  }, \"docker exec -it --user root example-database /bin/bash\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27l83eru4ept5gmu5cfl.png\",\n    \"alt\": null\n  }), \" \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" You need to use --user root (option) for update package list. Next, update package list by apt-get update -y as below.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n5zisiqcobmgvzat2y41.png\",\n    \"alt\": null\n  }), \" \"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Then you will installing 2 package such as vim and cron as below.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u67zj8nurlnvl0hnrjku.png\",\n    \"alt\": null\n  })), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2mmleibq9yok9i8a8gl.png\",\n    \"alt\": null\n  }))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"4. Add sqlcmd cli to crontab by cron -e cli as below.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/leod92unp5vtvhi0k8zz.png\",\n    \"alt\": null\n  })), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"For example above configuration is running backup-database.sql every 1 minute. Keep in mind it's just example for show how it work. Next you want to restart crontab for start your schedule job like this\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtuk50cojg5apimviz7c.png\",\n    \"alt\": null\n  }))), mdx(\"section\", null, mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"5. See log by tail -f /tmp/daily-backup.log & .bak files.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6sgtut8xpcfvvh3101gu.png\",\n    \"alt\": null\n  })), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qbagw2p288kyzsbsf50e.png\",\n    \"alt\": null\n  })), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"Until we meet again. Thank you\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#1-write-t-sql-for-backup-your-database","title":"1. Write T-SQL for backup your database."},{"url":"#2-copy-backup-databasesql-file-to-your-container","title":"2. Copy backup-database.sql file to your container."},{"url":"#3-update-packages-list-to-new-version","title":"3. Update packages list to new version."},{"url":"#4-add-sqlcmd-cli-to-crontab-by-cron--e-cli-as-below","title":"4. Add sqlcmd cli to crontab by cron -e cli as below."},{"url":"#5-see-log-by-tail--f-tmpdaily-backuplog--bak-files","title":"5. See log by tail -f /tmp/daily-backup.log & .bak files."}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"storage/sql-server/automate-backup-database-sql-server-in-docker-container.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"d8cc45e74ec87b664a5c7f2ad7a707af6edac455","date":"2021-09-20 03:20"}},"pageContext":{"id":"0078858f-571d-5f43-a48d-e0ad80e9d327"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}