{"componentChunkName":"component---src-templates-docs-js","path":"/frontend-web/react-typescript/migrate-class-component-to-functional-component","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"a913b030-96af-5d6a-83d4-40c02de83c12","title":"Migrate Class Component to Functional Component","slug":"/frontend-web/react-typescript/migrate-class-component-to-functional-component"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Migrate Class Component to Functional Component\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Local State\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E40\\u0E23\\u0E32\\u0E2A\\u0E32\\u0E21\\u0E32\\u0E23\\u0E16\\u0E41\\u0E1B\\u0E25\\u0E07\\u0E08\\u0E32\\u0E01 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/class_components/\"\n  }, \"Class Component\"), \" \\u0E14\\u0E49\\u0E32\\u0E19\\u0E25\\u0E48\\u0E32\\u0E07\\u0E19\\u0E35\\u0E49\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import React from 'react';\\n\\ninterface MyProps {\\n  message: string;\\n};\\ninterface MyState {\\n  count: number; \\n};\\nclass App extends React.Component<MyProps, MyState> {\\n  state: MyState = {\\n    // optional second annotation for better type inference\\n    count: 0,\\n  };\\n  render() {\\n    return (\\n      <div>\\n        {this.props.message} {this.state.count}\\n      </div>\\n    );\\n  }\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E43\\u0E2B\\u0E49\\u0E40\\u0E1B\\u0E47\\u0E19 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/function_components\"\n  }, \"Functional Component\"), \" \\u0E41\\u0E1A\\u0E1A\\u0E19\\u0E35\\u0E49\\u0E44\\u0E14\\u0E49 \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import React, { useState } from 'react';\\n\\ninterface PropTypes {\\n  message: string;\\n}\\n\\nfunction App({ message }: PropTypes){\\n  const [count, setCount] = useState(0);\\n\\n  return (\\n    <div>\\n      {message} {count}\\n    </div>\\n  );\\n};\\nexport default App;\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E17\\u0E33\\u0E44\\u0E21\\u0E16\\u0E36\\u0E07\\u0E44\\u0E21\\u0E48\\u0E41\\u0E19\\u0E30\\u0E19\\u0E33 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.FC\"), \" \\u0E2B\\u0E23\\u0E37\\u0E2D \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.FunctionComponent\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"React.VoidFunctionComponent\"), \" \\u0E2D\\u0E48\\u0E32\\u0E19\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\\u0E43\\u0E19 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/function_components\"\n  }, \"Functional Component\"), \" \")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Handle Click Event\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E40\\u0E23\\u0E32\\u0E2A\\u0E32\\u0E21\\u0E32\\u0E23\\u0E16\\u0E41\\u0E1B\\u0E25\\u0E07\\u0E08\\u0E32\\u0E01 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/class_components\"\n  }, \"Class Component\"), \" \\u0E14\\u0E49\\u0E32\\u0E19\\u0E25\\u0E48\\u0E32\\u0E07\\u0E19\\u0E35\\u0E49\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import React from 'react';\\n\\ninterface PropTypes {\\n  message: string;\\n}\\ninterface StateTypes {\\n  counter: number;\\n}\\nclass App extends React.Component<PropTypes, StateTypes> {\\n  state: StateTypes = {\\n    counter: 0\\n  };\\n\\n  handleClick(amount: number) {\\n    this.setState( state => ({\\n      counter: state.counter + amount\\n    }));\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <h1>{this.props.message}</h1>\\n        <button onClick={() => this.handleClick(1)}> Increase </button>\\n        <p>{this.state.counter}</p>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\")), mdx(\"blockquote\", {\n    parentName: \"section\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note: Using an arrow function in render creates a new function each time the component renders, which may break optimizations based on strict identity comparison. Read more at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/faq-functions.html#arrow-function-in-render\"\n  }, \"React Official Doc\"), \".\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E43\\u0E2B\\u0E49\\u0E40\\u0E1B\\u0E47\\u0E19 Functional Component \\u0E41\\u0E1A\\u0E1A\\u0E19\\u0E35\\u0E49\\u0E44\\u0E14\\u0E49 \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import React, { useState } from 'react';\\n\\ninterface PropTypes {\\n  message: string;\\n}\\n\\nfunction App({ message }: PropTypes) {\\n  const [counter, setCounter] = useState(0);\\n\\n  const handleClick = (amount: number) => {\\n    setCounter(counter + amount);\\n  };\\n\\n  return (\\n    <div>\\n      <h1>{message}</h1>\\n      <button onClick={() => handleClick(1)}> Increase </button>\\n      <p>{counter}</p>\\n    </div>\\n  );\\n};\\nexport default App;\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"componentDidMount() in React Hook\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E2B\\u0E19\\u0E36\\u0E48\\u0E07\\u0E43\\u0E19 React Lifecyle \\u0E17\\u0E35\\u0E48\\u0E43\\u0E0A\\u0E49\\u0E1A\\u0E48\\u0E2D\\u0E22\\u0E46 \\u0E21\\u0E32\\u0E01\\u0E46 \\u0E04\\u0E37\\u0E2D \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/react-component.html#componentdidmount\"\n  }, \"componentDidMount()\"), \" \\u0E0B\\u0E36\\u0E48\\u0E07\\u0E08\\u0E30\\u0E17\\u0E33\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\\u0E41\\u0E23\\u0E01 \\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\\u0E40\\u0E14\\u0E35\\u0E22\\u0E27\\u0E40\\u0E21\\u0E37\\u0E48\\u0E2D Component \\u0E42\\u0E2B\\u0E25\\u0E14\\u0E40\\u0E2A\\u0E23\\u0E47\\u0E08\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function FirstExecuteComponent() {\\n\\n  // add event listeners (Flux Store, WebSocket, document, etc.)\\n  useEffect(\\n    () => console.log(\\\"Component loaded\\\"),\\n    []\\n  );\\n  return null;\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E02\\u0E49\\u0E2D\\u0E2A\\u0E31\\u0E07\\u0E40\\u0E01\\u0E15\\u0E38 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useEffect\"), \" \\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23\\u0E23\\u0E31\\u0E1A 2 parameters \\u0E16\\u0E49\\u0E32\\u0E2D\\u0E22\\u0E32\\u0E01\\u0E43\\u0E2B\\u0E49\\u0E40\\u0E2B\\u0E21\\u0E37\\u0E2D\\u0E19 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"componentDidMount()\"), \" \\u0E43\\u0E2B\\u0E49\\u0E43\\u0E2A\\u0E48 Array \\u0E40\\u0E1B\\u0E25\\u0E48\\u0E32\\u0E46 \\u0E43\\u0E19 parameters \\u0E15\\u0E31\\u0E27\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E2D\\u0E07 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[]\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"componentWillUnmount() in React Hook\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E2D\\u0E35\\u0E01\\u0E2B\\u0E19\\u0E36\\u0E48\\u0E07\\u0E43\\u0E19 React Lifecyle \\u0E17\\u0E35\\u0E48\\u0E21\\u0E35\\u0E43\\u0E0A\\u0E49\\u0E1A\\u0E49\\u0E32\\u0E07\\u0E04\\u0E37\\u0E2D\\u0E04\\u0E37\\u0E2D \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://reactjs.org/docs/react-component.html#componentwillunmount\"\n  }, \"componentWillUnmount()\"), \" \\u0E0B\\u0E36\\u0E48\\u0E07\\u0E08\\u0E30\\u0E17\\u0E33\\u0E07\\u0E32\\u0E19\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\\u0E2A\\u0E38\\u0E14\\u0E17\\u0E49\\u0E32\\u0E22\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\\u0E40\\u0E14\\u0E35\\u0E22\\u0E27\\u0E01\\u0E48\\u0E2D\\u0E19\\u0E17\\u0E35\\u0E48 Component \\u0E16\\u0E39\\u0E01\\u0E40\\u0E2D\\u0E32\\u0E2D\\u0E2D\\u0E01 (Component is unmounted and destroyed)\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"function FirstAndLastExecuteComponent() {\\n\\n  // remove event listeners (Flux Store, WebSocket, document, etc.)\\n  useEffect(\\n    () => {\\n        console.log(\\\"Component loaded\\\");\\n        return () => console.log(\\\"Component unloaded\\\");\\n    },\\n    []\\n  );\\n  return null;\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"\\u0E40\\u0E23\\u0E32\\u0E2A\\u0E32\\u0E21\\u0E32\\u0E23\\u0E16\\u0E43\\u0E0A\\u0E49\\u0E1B\\u0E23\\u0E30\\u0E42\\u0E22\\u0E0A\\u0E19\\u0E4C\\u0E08\\u0E32\\u0E01 function \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useEffect\"), \" \\u0E44\\u0E14\\u0E49 \\u0E15\\u0E23\\u0E07\\u0E17\\u0E35\\u0E48 return \\u0E02\\u0E2D\\u0E07 parameters \\u0E15\\u0E31\\u0E27\\u0E41\\u0E23\\u0E01\\u0E02\\u0E2D\\u0E07 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useEffect\"), \" \\u0E42\\u0E14\\u0E22\\u0E40\\u0E23\\u0E32\\u0E2A\\u0E32\\u0E21\\u0E32\\u0E23\\u0E16 remove event listeners \\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E25\\u0E49\\u0E32\\u0E07\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E2D\\u0E30\\u0E44\\u0E23\\u0E1A\\u0E32\\u0E07\\u0E2D\\u0E22\\u0E48\\u0E32\\u0E07 \\u0E01\\u0E47\\u0E44\\u0E14\\u0E49\\u0E04\\u0E23\\u0E31\\u0E1A\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#local-state","title":"Local State"},{"url":"#handle-click-event","title":"Handle Click Event"},{"url":"#componentdidmount-in-react-hook","title":"componentDidMount() in React Hook"},{"url":"#componentwillunmount-in-react-hook","title":"componentWillUnmount() in React Hook"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"frontend-web/react-typescript/migrate-class-component-to-functional-component.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"d8cc45e74ec87b664a5c7f2ad7a707af6edac455","date":"2021-09-20 03:20"}},"pageContext":{"id":"a913b030-96af-5d6a-83d4-40c02de83c12"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}