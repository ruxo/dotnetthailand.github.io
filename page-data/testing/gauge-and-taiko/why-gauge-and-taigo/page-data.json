{"componentChunkName":"component---src-templates-docs-js","path":"/testing/gauge-and-taiko/why-gauge-and-taigo","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"14de3be2-99cc-560e-99c1-947949d4bdaf","title":"Why Gauge and Taiko?","slug":"/testing/gauge-and-taiko/why-gauge-and-taigo"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Why Gauge and Taiko?\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true,\n  \"order\": 0\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Consider to use Gauge and Taiko, if:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want a reliable test, not a flaky test. Taiko has implicit waits that helps you to avoid this problem.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want a smart selector that you don't need to deal with CSS or XPath selector if you don't need it. With Taiko, you can select an element with a simple text/label, or Proximity e.g. above, below, new, etc. More about Proximity selectors \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.taiko.dev/api/reference/\"\n  }, \"https://docs.taiko.dev/api/reference/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want to use a powerful Taiko REPL that you can execute a command to a browser, repeat it easily and generate code from command history.\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/1ccaaca067c89e7dee606aa8581e104f/taiko-repl.gif\",\n    \"alt\": null\n  })), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want to mock API easily.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want to write code with TypeScript. Taiko supports TypeScript.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want to involve a non-technical person to write a test specification. Gauge's test specification is written in Markdown with normal English sentences and easy to maintain.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You want a simple way to extend and debug a test step. You can write Gauge's test step with TypeScript, Taiko and debug it with VS Code.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Built-in report without additional setup\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Example of Gauge specification\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content are written in Markdown\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"# Getting Started with Gauge\\n\\nThis is a context step that runs before every scenario\\n* Open todo application\\n\\n## Display number of items\\n* Add task \\\"first task\\\"\\n* Must display \\\"1 item left\\\"\\n* Add task \\\"second task\\\"\\n* Must display \\\"2 items left\\\"\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Example of step implementation\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Step implementation is written in normal TypeScript\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"import { Step, Table, BeforeSuite, AfterSuite } from \\\"gauge-ts\\\";\\nimport {\\n  below,\\n  checkBox,\\n  clear,\\n  click,\\n  closeBrowser,\\n  evaluate,\\n  goto,\\n  into,\\n  link,\\n  openBrowser,\\n  press,\\n  setConfig,\\n  text,\\n  textBox,\\n  toLeftOf,\\n  waitFor,\\n  write\\n} from 'taiko';\\nimport * as assert from 'assert';\\n\\nexport default class StepImplementation {\\n  @BeforeSuite()\\n  public async beforeSuite() {\\n    console.log('before suite');\\n    await setConfig({ navigationTimeout: 60 * 1000 });\\n    await openBrowser({ headless: false });\\n  }\\n\\n  @AfterSuite()\\n  public async afterSuite() {\\n    await closeBrowser();\\n  };\\n\\n  @Step(\\\"Open todo application\\\")\\n  public async openTodo() {\\n    await goto(\\\"todo.taiko.dev\\\");\\n  }\\n\\n  @Step(\\\"Add task <item>\\\")\\n  public async addTask(item: string) {\\n    await write(item, into(textBox({\\n      class: \\\"new-todo\\\"\\n    })));\\n    await press('Enter');\\n  }\\n\\n  @Step(\\\"Must display <message>\\\")\\n  public async checkDisplay(message: string) {\\n    assert.ok(await text(message).exists(0, 0));\\n  }\\n}\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Learn more\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.gauge.org/?os=linux&language=javascript&ide=vscode\"\n  }, \"Gauge documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.taiko.dev/\"\n  }, \"Taiko documentation\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#consider-to-use-gauge-and-taiko-if","title":"Consider to use Gauge and Taiko, if:"},{"url":"#example-of-gauge-specification","title":"Example of Gauge specification"},{"url":"#example-of-step-implementation","title":"Example of step implementation"},{"url":"#learn-more","title":"Learn more"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"testing/gauge-and-taiko/why-gauge-and-taigo.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"d8cc45e74ec87b664a5c7f2ad7a707af6edac455","date":"2021-09-20 03:20"}},"pageContext":{"id":"14de3be2-99cc-560e-99c1-947949d4bdaf"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}