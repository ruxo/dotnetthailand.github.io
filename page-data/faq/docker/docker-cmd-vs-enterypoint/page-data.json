{"componentChunkName":"component---src-templates-docs-js","path":"/faq/docker/docker-cmd-vs-enterypoint","result":{"data":{"site":{"siteMetadata":{"title":".NET Thailand","docsLocation":"https://github.com/dotnetthailand/dotnetthailand.github.io","docsRepo":"dotnetthailand/dotnetthailand.github.io","docsLocationType":"github","editable":true,"contentRootPath":"content","siteUrl":"https://www.dotnetthailand.com"}},"mdx":{"fields":{"id":"8c737922-e489-5ef0-9626-2a81f4164e79","title":"Docker CMD VS ENTRYPOINT","slug":"/faq/docker/docker-cmd-vs-enterypoint"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Docker CMD VS ENTRYPOINT\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Definition\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CMD sets default command and/or parameters, which can be overwritten from command line when docker container runs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ENTRYPOINT configures a container that will run as an executable.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"When to use CMD or ENTRYPOINT\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prefer ENTRYPOINT to CMD when building executable Docker image and you need a command always to be executed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choose CMD if you need to provide a default command and/or arguments that can be overwritten from command line when docker container runs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Choose CMD to be be a default parameter of ENTRYPOINT that can be overwritten later.\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Example of how to use CMD & ENTRYPOINT together\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a Docker file\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-dockerfile\"\n  }, \"FROM alpine\\nENTRYPOINT [\\\"echo\\\", \\\"Hello\\\"]\\nCMD [\\\"World\\\"]\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Launch a new shell.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Build a Docker image.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"docker build -t my-custom-image .\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"List images.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"docker image ls\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Launch a container with default arguments.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"docker run my-custom-image\\n\\n// Output\\nHello world\\n\")), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Launch a container with override arguments.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"docker run my-custom-image .NET TH\\n\\n// Output\\nHello .NET TH\\n\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Command in a Docker compose file\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The Docker Compose command or everything in a docker run invocation after the image name, overrides the Dockerfile CMD.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If the image also has an ENTRYPOINT, the command you provide here is passed as arguments to the entrypoint in the same way the Dockerfile CMD does.\")), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Maintainers\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"KubeOps\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Yosapol Jitrak\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Useful links\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://goinbigdata.com/docker-run-vs-cmd-vs-entrypoint/\"\n  }, \"https://goinbigdata.com/docker-run-vs-cmd-vs-entrypoint/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://phoenixnap.com/kb/docker-cmd-vs-entrypoint\"\n  }, \"https://phoenixnap.com/kb/docker-cmd-vs-entrypoint\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/a/61794651/1872200\"\n  }, \"https://stackoverflow.com/a/61794651/1872200\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#definition","title":"Definition"},{"url":"#when-to-use-cmd-or-entrypoint","title":"When to use CMD or ENTRYPOINT"},{"url":"#example-of-how-to-use-cmd--entrypoint-together","title":"Example of how to use CMD & ENTRYPOINT together"},{"url":"#command-in-a-docker-compose-file","title":"Command in a Docker compose file"},{"url":"#maintainers","title":"Maintainers"},{"url":"#useful-links","title":"Useful links"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"faq/docker/docker-cmd-vs-enterypoint.md"},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"d8cc45e74ec87b664a5c7f2ad7a707af6edac455","date":"2021-09-20 03:20"}},"pageContext":{"id":"8c737922-e489-5ef0-9626-2a81f4164e79"}},"staticQueryHashes":["12478684","12478684","1306071104","2353585426","2353585426","2552263575","2552263575","2882937274","2882937274","353167761","353167761","3812332637","3812332637","4285724809"]}